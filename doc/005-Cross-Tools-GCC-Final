# Cross-Tools: GCC-10.2.0 Final
# Source: http://ftp.gnu.org/gnu/gcc/gcc-10.1.0/gcc-10.2.0.tar.xz
# Build and install as mlfs

# Additional sources to add as GCC requires them 
tar -xf ../mpfr-4.1.0.tar.xz
mv -v mpfr-4.1.0 mpfr
tar -xf ../gmp-6.2.0.tar.xz
mv -v gmp-6.2.0 gmp
tar -xf ../mpc-1.1.0.tar.gz
mv -v mpc-1.1.0 mpc

# Apply patches [from void-linux]
patch -Np0 -i ../patches/gcc-9.1.0-void/ada-shared.patch
patch -Np0 -i ../patches/gcc-9.1.0-void/fix-cxxflags-passing.patch
patch -Np0 -i ../patches/gcc-9.1.0-void/fix-musl-execinfo.patch
patch -Np0 -i ../patches/gcc-9.1.0-void/libgcc-musl-ldbl128-config.patch
patch -Np0 -i ../patches/gcc-9.1.0-void/musl-ada.patch
patch -Np0 -i ../patches/gcc-9.1.0-void/no-stack_chk_fail_local.patch
patch -Np0 -i ../patches/gcc-9.1.0-void/non-nullness.patch
patch -Np1 -i ../patches/gcc-10.1.0-Enable-CET-in-cross-compiler-if-possible.patch

case $(uname -m) in
  x86_64)
    sed -e '/m64=/s/lib64/lib/' \
        -i.orig gcc/config/i386/t-linux64
 ;;
esac

# Configure in a dedicated build directory
mkdir build && cd  build
AR=ar LDFLAGS="-Wl,-rpath,/cross-tools/lib" \
../configure \
    --prefix=/cross-tools \
    --build=${MLFS_HOST} \
    --host=${MLFS_HOST} \
    --target=${MLFS_TARGET} \
    --disable-multilib \
    --with-sysroot=/cross-tools \
    --disable-nls \
    --enable-shared \
    --enable-languages=c,c++ \
    --enable-threads=posix \
    --enable-clocale=generic \
    --enable-libstdcxx-time \
    --enable-fully-dynamic-string \
    --disable-symvers \
    --disable-libsanitizer \
    --disable-lto-plugin \
    --disable-libssp 

# Build
make AS_FOR_TARGET="${MLFS_TARGET}-as" \
    LD_FOR_TARGET="${MLFS_TARGET}-ld"

# Install
make install

# Now adjust GCC to produce programs and libraries that will use musl libc in /cross-tools...
export SPECFILE=`dirname $(${MLFS_TARGET}-gcc -print-libgcc-file-name)`/specs
${MLFS_TARGET}-gcc -dumpspecs > specs
sed -i 's/\/lib\/ld-musl-x86_64.so.1/\/cross-tools\/lib\/ld-musl-x86_64.so.1/g' specs

# Check specs file
grep "/cross-tools/lib/ld-musl-x86_64.so.1" specs  --color=auto

# Install specs file
mv -v specs $SPECFILE
unset SPECFILE

# Check if GCC compiles as intended:
echo "int main(){}" > dummy.c
${MLFS_TARGET}-gcc dummy.c
readelf -l a.out | grep Requesting
# Should output (x86_64):
# [Requesting program interpreter: /cross-tools/lib/ld-musl-x86_64.so.1]
