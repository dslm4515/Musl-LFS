# Final System: Binutils
# Source: http://ftp.gnu.org/gnu/binutils/binutils-2.35.tar.xz
# This section is done in Chroot environment

# Create build directory
mkdir -v build && cd build

case $(uname -m) in
  x86_64)  export EXTRA_CONFIG=" --enable-targets=x86_64-pep"
           ;;
  i686)    export EXTRA_CONFIG=" --enable-64-bit-bfd --enable-targets=x86_64-linux-gnu,x86_64-pep"
           ;;
esac

# Configure
../configure --prefix=/usr       \
             --enable-gold       \
             --enable-ld=default \
             --enable-plugins    \
             --enable-shared     \
             --disable-werror    \
             --with-system-zlib  \
             --enable-relro \
             --enable-lto \
             --disable-nls \
             --enable-deterministic-archives \
             --enable-threads \
             --disable-compressed-debug-sections \
             --with-mmap $EXTRA_CONFIG 

# Build
make tooldir=/usr

# Rebuild libiberty.a with -fPIC
cp -a libiberty libiberty-pic
make -C libiberty-pic clean
make CFLAGS="$CFLAGS -fPIC" -C libiberty-pic

# Rebuild libbfd.a with -fPIC
# hidden visability prevent 3rd party shared libraries exporting bfd non-stable API
cp -a bfd bfd-pic
make -C bfd-pic clean
make CFLAGS="$CFLAGS -fPIC -fvisibility=hidden" -C bfd-pic

# Rebuild libopcodes.a with -fPIC
cp -a opcodes opcodes-pic
make -C opcodes-pic clean
make CFLAGS="$CFLAGS -fPIC" -C opcodes-pic

# Install
make tooldir=/usr install

# Remove ld (hardlink) and make a symlink to ld.bfd.
rm -fv   /usr/bin/ld
ln -sfrv /usr/bin/ld.bfd /usr/bin/ld

# Add some useful headers
cd ..
install -v -m 644 include/libiberty.h /usr/include
install -v -m 644 include/demangle.h  /usr/include

# install libraries rebuilt with -fPIC
cd build
install -v -m 644 libiberty-pic/libiberty.a /usr/lib
install -v -m 644 bfd-pic/libbfd.a          /usr/lib
install -v -m 644 opcodes-pic/libopcodes.a  /usr/lib

# Remove these symlinks, they are not ABI stable.
# Programs should compile static to the .a file.
rm -fv /usr/lib/lib{bfd,opcodes}.so
echo "INPUT ( /usr/lib/libbfd.a -liberty -lz )"  > /usr/lib/libbfd.so
echo "INPUT ( /usr/lib/libopcodes.a -lbfd )"     > /usr/lib/libopcodes.so

# Remove useless manpages.
for f in dlltool nlmconv windres windmc; do
 rm -fv /usr/share/man/man1/${f}.1
done
