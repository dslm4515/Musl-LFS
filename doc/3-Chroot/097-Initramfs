# Final System: Initramfs Image
# This section is done in Chroot environment

# Create a directory to hold the contents of
# the initramfs
mkdir -pv /sources/initramfs_build

cd /sources/initramfs_build
mkdir -pv bin dev etc lib proc run sbin sys usr
mkdir -pv lib/{firmware,modules,udev}
mkdir -pv etc/{modprobe.d,udev}

# Create symlinks
ln -sv lib lib64
ln -sv ../bin  usr/bin
ln -sv ../sbin usr/sbin

# Copy binaries
for b in bash s6-cat cp dd killall kmod s6-ln s6-ls \
          s6-mkdir mknod s6-mount rm sed s6-sleep \
          umount uname s6-basename readlink printf
do
  cp -va /bin/$b bin/
done
ln -sv kmod bin/insmod
ln -sv kmod bin/lsmod
ln -sv bash bin/sh

# Create the nodes for udev to mount on:
mknod -m 600 dev/console c 5 1
mknod -m 666 dev/null c 1 3

# Copy udev configuration
cp -v  /etc/udev/udev.conf etc/udev/
cp -rv /etc/udev/rules.d   etc/udev/
cp -rv /lib/udev/*         lib/udev/

# Set module load order, if needed
touch etc/modprobe.d/modprobe.conf

# Copy the init script
cp -v ../files/initramfs-init sbin/init

# Copy required libraries
for l in libreadline.so.8 libhistory.so.8 libcurses.so \
         libterminfo.so libacl.so.1 libattr.so.1 libzstd.so.1 \
         liblzma.so.5  libz.so.1 libmount.so.1 libblkid.so.1 \
         libkmod.so.2 
do
  cp -va /lib/$l.* lib/
done
# If netbsd was built instead of ncurses:
cp -va /lib/libcurses.so   lib/
cp -va /lib/libterminfo.so lib/

cp -v  /usr/lib/libc.so lib/
ln -sv libc.so lib/ld-musl-$(uname -m).so.1 

# Copy any firmware required for boot:
cp -rv /lib/firmware/* lib/firmware/

# Copy any kernel modules:
cp -rv /lib/modules/* lib/modules/

# Now create the initramfs image. Do not change directories
find . | cpio -o -H newc | gzip -9  > /boot/initrd.img

# Save the initramfs_build directory to update/build more
# Or after booting into new MLFS build, use the mkinitramfs
# script. 
