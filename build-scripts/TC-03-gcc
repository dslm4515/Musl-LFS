#! /bin/bash
# syntax *.build <package.tar.xz> <number of make jobs>

source $MLFS/sources/scripts/000-autobuild.config &&

export PACKAGE=$(echo "$1" | sed -n '/\.tar\.xz$/s///p' )
cd $PACKAGE &&
############################################################
export CC="${MLFS_TARGET}-gcc" &&
export CXX="${MLFS_TARGET}-g++" &&
export AR="${MLFS_TARGET}-ar" &&
export AS="${MLFS_TARGET}-as" &&
export RANLIB="${MLFS_TARGET}-ranlib" &&
export LD="${MLFS_TARGET}-ld" &&
export STRIP="${MLFS_TARGET}-strip" &&

echo "[ TC 3/31 - $PACKAGE ] Adding auxillary sources ..." |& tee -a  ~/build.log &&
tar -xf ../mpfr-* &&
mv $( echo "$(ls ../mpfr-*)" | sed -n '/\.tar\.xz$/s///p' | cut -d "/" -f 2 ) mpfr &&
tar -xf ../gmp-* &&
mv $( echo "$(ls ../gmp-*)" | sed -n '/\.tar\.xz$/s///p' | cut -d "/" -f 2 ) gmp &&
tar -xf ../mpc-* &&
mv $( echo "$(ls ../mpc-*)" | sed -n '/\.tar\.gz$/s///p' | cut -d "/" -f 2 ) mpc &&

echo "[ TC 3/31 - $PACKAGE ] Patching  source ..." |& tee -a  ~/build.log &&
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/0010-ldbl128-config.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/ada-shared.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/fix-cxxflags-passing.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/fix-musl-execinfo.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/libgcc-musl-ldbl128-config.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/musl-ada.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/no-stack_chk_fail_local.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/non-nullness.patch

echo "[ TC 3/31 - $PACKAGE ] Re-create internal header ..." |& tee -a  ~/build.log &&
cat gcc/limitx.h gcc/glimits.h gcc/limity.h > \
  `dirname $($MLFS_TARGET-gcc -print-libgcc-file-name)`/include-fixed/limits.h &&
  
echo "[ TC 3/31 - $PACKAGE ] Change the location of GCC's default dynamic linker ..." |& tee -a  ~/build.log &&
for file in gcc/config/{linux,i386/linux{,64}}.h
do
  cp -uv $file{,.orig}
  sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
      -e 's@/usr@/tools@g' $file.orig > $file
  echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
  touch $file.orig
done &&

echo "[ TC 3/31 - $PACKAGE ] Configure source ..." |& tee -a  ~/build.log &&
mkdir -v build && cd build
../configure                                       \
    --target=${MLFS_TARGET}    \
    --build=${MLFS_HOST}       \
    --host=${MLFS_TARGET}      \
    --prefix=/tools                                \
    --with-local-prefix=/tools                     \
    --with-native-system-header-dir=/tools/include \
    --enable-languages=c,c++                       \
    --disable-libstdcxx-pch                        \
    --disable-multilib                             \
    --disable-bootstrap                            \
    --disable-libgomp \
    --disable-libquadmath                          \
    --disable-libssp                               \
    --disable-libvtv                               \
    --disable-symvers \
    --disable-libitm \
    --disable-libsanitizer &&
    
echo "[ TC 3/31 - $PACKAGE ] Compiling ..." |& tee -a  ~/build.log &&
PATH=/bin:/usr/bin:/cross-tools/bin:/tools/bin make $MJ &&

echo "[ TC 3/31 - $PACKAGE ] Installing ..." |& tee -a  ~/build.log &&
make install && ln -sv gcc /tools/bin/cc &&

GCC_INCLUDEDIR=`dirname $(${MLFS_TARGET}-gcc -print-libgcc-file-name)`/include &&
find ${GCC_INCLUDEDIR}/* -maxdepth 0 -xtype d -exec rm -rvf '{}' \; &&
rm -vf `grep -l "DO NOT EDIT THIS FILE" ${GCC_INCLUDEDIR}/*` &&
unset GCC_INCLUDEDIR &&

echo "[ TC - TEST ] Testing Tolchain: " |& tee -a  ~/build.log &&
echo 'int main(){}' > dummy.c &&
cc dummy.c &&
readelf -l a.out | grep ': /tools' |& tee -a  ~/build.log &&
rm -v dummy.c a.out &&
############################################################
cd ../.. && rm -rf $PACKAGE
