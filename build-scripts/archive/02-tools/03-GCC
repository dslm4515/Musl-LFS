#! /bin/bash
# step 15 originally
if [ "$1" != "" ]; then
        export MJ="-j$1"
else
        export MJ=""
fi
export PACKAGE=$(basename -- "$PWD")
read -p "Number of make jobs: $MJ" &&

export CC="${MLFS_TARGET}-gcc"
export CXX="${MLFS_TARGET}-g++"
export AR="${MLFS_TARGET}-ar"
export AS="${MLFS_TARGET}-as"
export RANLIB="${MLFS_TARGET}-ranlib"
export LD="${MLFS_TARGET}-ld"
export STRIP="${MLFS_TARGET}-strip"

echo "[ TC - $PACKAGE ] Adding auxillary sources ..." &&
tar -xf ../mpfr-4.0.2.tar.xz
mv -v mpfr-4.0.2 mpfr
tar -xf ../gmp-6.1.2.tar.xz
mv -v gmp-6.1.2 gmp
tar -xf ../mpc-1.1.0.tar.gz
mv -v mpc-1.1.0 mpc

echo "[ TC - $PACKAGE ] Patching  source ..." &&
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/0010-ldbl128-config.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/ada-shared.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/fix-cxxflags-passing.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/fix-musl-execinfo.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/libgcc-musl-ldbl128-config.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/musl-ada.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/no-stack_chk_fail_local.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/non-nullness.patch

echo "[ TC - $PACKAGE ] Re-create internal header ..." &&
cat gcc/limitx.h gcc/glimits.h gcc/limity.h > \
  `dirname $($MLFS_TARGET-gcc -print-libgcc-file-name)`/include-fixed/limits.h

echo "[ TC - $PACKAGE ] Change the location of GCC's default dynamic linker ..." &&  
for file in gcc/config/{linux,i386/linux{,64}}.h
do
  cp -uv $file{,.orig}
  sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
      -e 's@/usr@/tools@g' $file.orig > $file
  echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
  touch $file.orig
done

echo "[ TC - $PACKAGE ] Configure source ..." &&
mkdir -v build && cd build
../configure                                       \
    --target=${MLFS_TARGET}    \
    --build=${MLFS_HOST}       \
    --host=${MLFS_TARGET}      \
    --prefix=/tools                                \
    --with-local-prefix=/tools                     \
    --with-native-system-header-dir=/tools/include \
    --enable-languages=c,c++                       \
    --disable-libstdcxx-pch                        \
    --disable-multilib                             \
    --disable-bootstrap                            \
    --disable-libgomp \
    --disable-libquadmath                          \
    --disable-libssp                               \
    --disable-libvtv                               \
    --disable-symvers \
    --disable-libitm \
    --disable-libsanitizer &&
    
read -p "[ TC - $PACKAGE ] Compile?" &&
time { PATH=/bin:/usr/bin:/cross-tools/bin:/tools/bin make $MJ ; } &&

read -p "[ TC - $PACKAGE ] Install?" &&
make install && ln -sv gcc /tools/bin/cc &&

GCC_INCLUDEDIR=`dirname $(${MLFS_TARGET}-gcc -print-libgcc-file-name)`/include &&
find ${GCC_INCLUDEDIR}/* -maxdepth 0 -xtype d -exec rm -rvf '{}' \; &&
rm -vf `grep -l "DO NOT EDIT THIS FILE" ${GCC_INCLUDEDIR}/*` &&
unset GCC_INCLUDEDIR


read -p ">> Test Tool chain sanity:" &&
echo 'int main(){}' > dummy.c &&
cc dummy.c &&
readelf -l a.out | grep ': /tools' &&
read -p "Output good? [ Yes = enter | No = ctrl+C ] " &&
rm -v dummy.c a.out





